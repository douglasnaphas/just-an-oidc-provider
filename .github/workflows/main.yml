# This is a basic workflow to help you get started with Actions

name: CI
concurrency: ci-${{ github.ref }}
on:
  push:
    branches: [master]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set owner
        run: |
          echo "{VAR_REPO_OWNER}={cdk-turnkey}" >> "$GITHUB_ENV"
      - name: Set repo name
        run: |
          echo "{VAR_REPO_NAME}={just-a-bucket2}" >> "$GITHUB_ENV"
      - name: Set repo
        run: |
          echo "{VAR_REPO}=${{ env.VAR_REPO_OWNER }}/${{ env.VAR_REPO_NAME }}" >> "$GITHUB_ENV"
      - uses: actions/checkout@v3
        with:
          repository: ${{ env.VAR_REPO }}
          submodules: true
          persist-credentials: false
      - name: Install
        run: |
          npm install
      - name: Build
        run: |
          npm run build
      - name: Test (top-level)
        run: |
          npm test
      - name: Identify test account and region
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          aws sts get-caller-identity
          echo ${AWS_DEFAULT_REGION} | sed 's/-/+/g'
      - name: Deploy the app stack to the test account
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          npx cdk bootstrap
          STACKNAME=$(npx @cdk-turnkey/stackname@1.2.0 --suffix app)
          npx cdk deploy --require-approval never ${STACKNAME}
      - name: Deploy content (test account)
        working-directory: content
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          bash deploy-content.sh
      - name: Run integration test (test account)
        working-directory: itest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          bash itest.sh
      - name: Identify prod account and region
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          aws sts get-caller-identity
          echo ${AWS_DEFAULT_REGION} | sed 's/-/+/g'
      - name: Deploy the app stack to the prod account
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          npx cdk bootstrap
          STACKNAME=$(npx @cdk-turnkey/stackname@1.2.0 --suffix app)
          npx cdk deploy --require-approval never ${STACKNAME}
      - name: Deploy content (prod account)
        working-directory: content
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          bash deploy-content.sh
      - name: Run integration test (prod account)
        working-directory: itest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          bash itest.sh
